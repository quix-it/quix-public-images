name: Build

on:
  push:
    branches:
      - main
      - develop
  schedule:
    - cron: '55 22 * * *'
  workflow_dispatch:

jobs:

  list-images:

    runs-on: ubuntu-latest
    outputs:
      build: ${{ steps.list.outputs.build }}
      matrix: ${{ steps.list.outputs.matrix }}
    steps:

      - name: Deep checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: List images
        id: list
        run: |
          sha_prev=$(git rev-parse HEAD~1)
          if [ "${{ github.event_name }}" == "push" ]; then
            matrix=$(git diff --name-only --diff-filter=d $sha_prev ${{ github.sha }} | grep -Eo '^images(/[^/]+){3}' | xargs -r -n1 -d'\n' dirname | sort -u | jq -R -s -c 'split("\n")|map(select(.|length>0))|{"include":map({"path":.})}')
          else
            matrix=$(find images -type d -mindepth 2 -maxdepth 2 | jq -R -s -c 'split("\n")|map(select(.|length>0))|{"include":map({"path":.})}')
          fi
          echo "::set-output name=matrix::$matrix"
          echo "::set-output name=build::$(jq '.include|length>0' <<<$matrix)"

  build:
    if: ${{ needs.list-images.outputs.build == 'true' }}
    runs-on: ubuntu-latest
    needs: [ list-images ]
    strategy:
      matrix: ${{ fromJSON(needs.list-images.outputs.matrix) }}

    steps:
      - name: Get image name and tag
        id: image
        run: |
          ref=${{ github.ref }}
          ref=${ref#refs/heads/}
          echo "::set-output name=IMAGE::$(basename $(dirname ${{ matrix.path }}))"
          echo "::set-output name=TAG::$(basename ${{ matrix.path }})"
          echo "::set-output name=PATH::${{ matrix.path }}"
          echo "::set-output name=TAG_SUFFIX::$( [[ $ref =~ ^(refs/heads/)?${{ github.event.repository.default_branch }}$ ]] || echo .${ref//\//-})"
      
      - name: Shallow checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ${{ steps.image.outputs.PATH }}
          file: ${{ steps.image.outputs.PATH }}/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.image.outputs.IMAGE }}:${{ steps.image.outputs.TAG }}${{ steps.image.outputs.TAG_SUFFIX }}
